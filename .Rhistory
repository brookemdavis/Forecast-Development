Rdist[i,4] <- median(resid$residadj)
# # run using TMB, without prior
# # Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_nBC <- RunRicker(Data = SimDataDF,
Fitting_SW = Fitting_SW, #"tmbstan",#"TMB",
Priors = F, BiasCorr=F, Name = "TMB_nBC")
TMB_wBC <- RunRicker(Data = SimDataDF,
Fitting_SW = Fitting_SW, #"tmbstan",#"TMB",
Priors = F, BiasCorr=T, Name = "TMB_wBC")
if( Fitting_SW == "tmbstan") {
Ests_quant_nBC <- apply ( as.data.frame(TMB_nBC$Ests) , 2, quantile, probs = c(0.025, 0.5, 0.975) )
logA_nBC <- as.data.frame(Ests_quant_nBC)$logA[2] # median
logSmax_nBC <- as.data.frame(Ests_quant_nBC)$logSmax[2] # median
logSigma_nBC <- as.data.frame(Ests_quant_nBC)$logSigma[2] # median
RicPars_nBC[i,] <- c(logA_nBC, logSmax_nBC, logSigma_nBC, TMB_nBC$Scale)
Ests_quant_wBC <- apply ( as.data.frame(TMB_wBC$Ests) , 2, quantile, probs = c(0.025, 0.5, 0.975) )
logA_wBC <- as.data.frame(Ests_quant_wBC)$logA[2] # median
logSmax_wBC <- as.data.frame(Ests_quant_wBC)$logSmax[2] # median
logSigma_wBC <- as.data.frame(Ests_quant_wBC)$logSigma[2] # median
RicPars_wBC[i,] <- c(logA_wBC, logSmax_wBC, logSigma_wBC, TMB_wBC$Scale)
}
if( Fitting_SW == "TMB") {
logA_nBC <- TMB_nBC$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax_nBC <- TMB_nBC$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma_nBC <- TMB_nBC$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars_nBC[i,] <- c(logA_nBC, logSmax_nBC, logSigma_nBC, TMB_nBC$Scale)
logA_wBC <- TMB_wBC$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax_wBC <- TMB_wBC$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma_wBC <- TMB_wBC$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars_wBC[i,] <- c(logA_wBC, logSmax_wBC, logSigma_wBC, TMB_wBC$Scale)
}
}
# Set up data frame of Ricker paramters for all MC trials
colnames(RicPars_nBC) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars_nBC <- as.data.frame(RicPars_nBC)
RicPars_nBC <- RicPars_nBC %>% mutate(Smax = exp(logSmax)*Scale)
colnames(RicPars_wBC) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars_wBC <- as.data.frame(RicPars_wBC)
RicPars_wBC <- RicPars_wBC %>% mutate(Smax = exp(logSmax)*Scale)
out <- list()
for (i in 1:ntrials){
#set.seed(2422)
SimData_nBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = F)
#set.seed(2422)
SimData_wBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_wBC$logSigma[i]),
true_a = exp(RicPars_wBC$logA[i]),
true_b = 1/(RicPars_wBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
#set.seed(2422)
SimData_wrongBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
SimData_HilBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i] + exp(RicPars_nBC$logSigma[i])^2/2),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
out[[i]] <- data.frame(i = i, SimData_nBC = SimData_nBC$R, SimData_wBC = SimData_wBC$R,
SimData_wrongBC = SimData_wrongBC$R, SimData_HilBC= SimData_HilBC$R)
}
out <- bind_rows(out)
out <- reshape2::melt(out, id.vars = "i") # or better, tidyr::pivot_longer
result <- group_by(out, variable, i) %>%
summarise(mean = mean(value), median = median(value), .groups = "drop")
result <- reshape2::melt(result, id.vars = c("i", "variable"), variable.name = "summary")
outTrueR <- bind_rows(outTrueR)
outTrueR <- reshape2::melt(outTrueR, id.vars = "i") # or better, tidyr::pivot_longer
resultTrueR <- group_by(outTrueR, variable, i) %>%
summarise(mean = mean(value), median = median(value), .groups = "drop")
resultTrueR <- reshape2::melt(resultTrueR, id.vars = c("i", "variable"), variable.name = "summary")
resultTrueR <- resultTrueR %>%  filter(summary == c("mean", "median")) %>%
mutate( trueR= round(as.numeric(value),0) ) %>% select(i, summary, trueR)
lines <- tibble(summary = c("mean", "median"),
value = c(mean(outTrueR$value), median(outTrueR$value)))
result <- result %>%
filter(summary == c("mean", "median")) %>% mutate( value= round(as.numeric(value),0) )
rel_error <- result %>% left_join(resultTrueR, by=c("i", "summary") )  %>% mutate(RelativeError= value/trueR)
result %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,300000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(data = lines, mapping = aes(yintercept = value))
rel_error %>%
ggplot(aes(variable, RelativeError)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,5) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 1))
group_by(rel_error, summary, variable) %>%
summarise(
RelativeError_med = median(RelativeError)) %>%
knitr::kable(digits = 2)
group_by(rel_error, summary, variable) %>%
summarise(
RelativeError = median(RelativeError)) %>%
knitr::kable(digits = 2)
out
out <- list()
outSp <- list())
for (i in 1:ntrials){
#set.seed(2422)
SimData_nBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = F)
#set.seed(2422)
SimData_wBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_wBC$logSigma[i]),
true_a = exp(RicPars_wBC$logA[i]),
true_b = 1/(RicPars_wBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
#set.seed(2422)
SimData_wrongBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
SimData_HilBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i] + exp(RicPars_nBC$logSigma[i])^2/2),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
out[[i]] <- data.frame(i = i, SimData_nBC = SimData_nBC$R, SimData_wBC = SimData_wBC$R,
SimData_wrongBC = SimData_wrongBC$R, SimData_HilBC= SimData_HilBC$R)
outSp[[i]] <- data.frame(i = i, SimData_nBC = SimData_nBC$S, SimData_wBC = SimData_wBC$S,
SimData_wrongBC = SimData_wrongBC$S, SimData_HilBC= SimData_HilBC$S)
}
out <- bind_rows(out)
out <- reshape2::melt(out, id.vars = "i") # or better, tidyr::pivot_longer
outSp <- bind_rows(outSp)
outSp <- reshape2::melt(outSp, id.vars = "i") # or better, tidyr::pivot_longer
#iterate generation of new data!
out <- list()
outSp <- list()
for (i in 1:ntrials){
#set.seed(2422)
SimData_nBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = F)
#set.seed(2422)
SimData_wBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_wBC$logSigma[i]),
true_a = exp(RicPars_wBC$logA[i]),
true_b = 1/(RicPars_wBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
#set.seed(2422)
SimData_wrongBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
SimData_HilBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i] + exp(RicPars_nBC$logSigma[i])^2/2),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
out[[i]] <- data.frame(i = i, SimData_nBC = SimData_nBC$R, SimData_wBC = SimData_wBC$R,
SimData_wrongBC = SimData_wrongBC$R, SimData_HilBC= SimData_HilBC$R)
outSp[[i]] <- data.frame(i = i, SimData_nBC = SimData_nBC$S, SimData_wBC = SimData_wBC$S,
SimData_wrongBC = SimData_wrongBC$S, SimData_HilBC= SimData_HilBC$S)
}
out <- bind_rows(out)
out <- reshape2::melt(out, id.vars = "i") # or better, tidyr::pivot_longer
outSp <- bind_rows(outSp)
outSp <- reshape2::melt(outSp, id.vars = "i") # or better, tidyr::pivot_longer
outSp
Rhat <- get_Rhat(a=1.93, b=1/159744, outSp$value, 0.9)
get_Rhat <- function(a, b, S, sigma) exp(log(S) + log(a) - b * S)
# True Ricker values for Harrison: Sig_Ricker = 0.9, true_a = 1.93, true_b=1/159744,
Rhat <- get_Rhat(a=1.93, b=1/159744, outSp$value, 0.9)
outSp
Rhat <- get_Rhat(a=1.93, b=1/159744, outSp$value, 0.9)
outSp %>% mutate(Rhat = Rhat)
outSp %>% mutate(Rhat = Rhat) %>% select(! value)
outSp %>% mutate(Rhat = Rhat) %>% select(! "value")
outSp %>% mutate(Rhat = Rhat) %>% select(! c("value"))
outSp %>% mutate(Rhat = Rhat) %>% select(! c(value))
outSp %>% mutate(Rhat = Rhat) %>% select(i, variable, Rhat)
result
outRhat
outRhat <- outSp %>% mutate(Rhat = Rhat) %>% select(i, variable, Rhat)
outRhat
out
resid <- left_join(out, outSp, by=c("i", "variable"))
resid
outSp
dim(outSp)
dim(out)
resid <- left_join(out, outRhat, by=c("i", "variable"))
resid
dim(outRhat)
dim(resid)
header(outRhat)
head(outRhat)
head(out)
unique(outRhat$variable)
unique(out$variable)
unique(out$i)
left_join(out, outRhat, by=c("i", "variable"))
is.numeric(out$value)
is.numeric(outRhat$value)
outRhat <- outSp %>% mutate(Rhat = as.numeric(Rhat)) %>% select(i, variable, Rhat)
is.numeric(outRhat$value)
is.numeric(outRhat$Rhat)
resid <- left_join(out, outRhat, by=c("i", "variable"))
dim(resid)
right_join(out, outRhat, by=c("i", "variable"))
out
out %>% left_join(outRhat, by=c("i", "variable"))
outRhat %>% left_join(out, by=c("i", "variable"))
outRhat %>% left_join(out)
resid <- outRhat %>% left_join(out, by=c("i"))
dim(resid)
resid <- outRhat %>% left_join(out, by=c("i", "variable", "value"))
is.data.frame(out)
is.data.frame(outRhat)
cbind(out, outRhat)
dim(out)
out <- list()
outSp <- list()
for (i in 1:ntrials){
#set.seed(2422)
SimData_nBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = F)
#set.seed(2422)
SimData_wBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_wBC$logSigma[i]),
true_a = exp(RicPars_wBC$logA[i]),
true_b = 1/(RicPars_wBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
#set.seed(2422)
SimData_wrongBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i]),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
SimData_HilBC <- Sim_Ricker_SR_Data(leng=30, age=4, Sig_Ricker = exp(RicPars_nBC$logSigma[i]),
true_a = exp(RicPars_nBC$logA[i] + exp(RicPars_nBC$logSigma[i])^2/2),
true_b = 1/(RicPars_nBC$Smax[i]),
hr_min = 0.25, hr_max = 0.35, lnorm_corr = T)
out[[i]] <- data.frame(i = i, SimData_nBC = SimData_nBC$R, SimData_wBC = SimData_wBC$R,
SimData_wrongBC = SimData_wrongBC$R, SimData_HilBC= SimData_HilBC$R)
outSp[[i]] <- data.frame(i = i, SimData_nBC = SimData_nBC$S, SimData_wBC = SimData_wBC$S,
SimData_wrongBC = SimData_wrongBC$S, SimData_HilBC= SimData_HilBC$S)
}
out <- bind_rows(out)
out <- reshape2::melt(out, id.vars = "i") # or better, tidyr::pivot_longer
#Get spanwers from the simulated data
outSp <- bind_rows(outSp)
outSp <- reshape2::melt(outSp, id.vars = "i") # or better, tidyr::pivot_longer
# Get fitted R values from simulated spawners
get_Rhat <- function(a, b, S, sigma) exp(log(S) + log(a) - b * S)
# True Ricker values for Harrison: Sig_Ricker = 0.9, true_a = 1.93, true_b=1/159744,
Rhat <- get_Rhat(a=1.93, b=1/159744, outSp$value, 0.9)
outRhat <- outSp %>% mutate(Rhat = Rhat) %>% select(i, variable, Rhat)
outRhat %>% left_join(out, by=c("i", "variable"))
resid <- cbin(out, Rhat)
resid <- cbind(out, Rhat)
resid
resid <- cbind(out, Rhat) %>% mutate(resid=(out-Rhat))
resid <- data.frame(cbind(out, Rhat)) %>% mutate(resid=(out-Rhat))
resid <- data.frame(cbind(out, Rhat))
resid
resid <- data.frame(cbind(out, Rhat))  %>% mutate(resid=(value - Rhat))
resid
resid <- data.frame(cbind(out, Rhat))  %>% mutate(resid=(value - Rhat)) %>% select(i, variable, resid)
resid <- group_by(resid, variable, i) %>%
summarise(mean = mean(resid), median = median(resid), .groups = "drop")
resid <- reshape2::melt(resid, id.vars = c("i", "variable"), variable.name = "summary")
resid
resid %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2)
resid <- data.frame(cbind(out, Rhat))  %>% mutate(resid=(value - Rhat)) %>% select(i, variable, resid)
#resid <- out %>% left_join(outRhat, by=c("i", "variable"))
resid <- group_by(resid, variable, i) %>%
summarise(mean = mean(resid), median = median(resid), .groups = "drop")
resid
resid <- reshape2::melt(resid, id.vars = c("i", "variable"), variable.name = "summary")
resid
resid <- resid %>% mutate( value = round(as.numberic(value),0) )
resid <- resid %>% mutate( value = round(as.numeeric(value),0) )
resid <- resid %>% mutate( value = round(as.numeric(value),0) )
resid
summary(resid$value)
resid <- data.frame(cbind(out, Rhat))  %>% mutate(resid=(value - Rhat)) %>% select(i, variable, resid)
#resid <- out %>% left_join(outRhat, by=c("i", "variable"))
resid <- group_by(resid, variable, i) %>%
summarise(mean = mean(resid), median = median(resid), .groups = "drop")
resid <- reshape2::melt(resid, id.vars = c("i", "variable"), variable.name = "summary")
dim(resid)
ntrials
resid %>% filter(variable==c("mean", "median")
)
resid %>% filter(summary == c("mean", "median")
)
resid %>% filter(summary == c("median")
)
resid %>% filter(summary == c("mean", "median"))
dim(resid %>% filter(summary == c("median"))
)
dim(resid %>% filter(summary == c("median")))
dim(resid %>% filter(summary == c("mean", "median")))
dim(resid %>% filter(summary %in% c("mean", "median")))
resid %>% filter(summary %in% c("mean", "median"))
resid %>% filter(summary %in% c("mean", "median")) %>% mutate( value = round(as.numeric(value),0) )
resid <- data.frame(cbind(out, Rhat))  %>% mutate(resid=(value - Rhat)) %>% select(i, variable, resid)
#resid <- out %>% left_join(outRhat, by=c("i", "variable"))
resid <- group_by(resid, variable, i) %>%
summarise(mean = mean(resid), median = median(resid), .groups = "drop")
resid <- reshape2::melt(resid, id.vars = c("i", "variable"), variable.name = "summary")
resid <- resid %>% filter(summary %in% c("mean", "median")) %>% mutate( value = round(as.numeric(value),0) )
resid
resid %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2)
resid %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,300000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
hist(exp(RicPars_nBC$logA[i]))
exp(RicPars_nBC$logA[i])
hist(exp(RicPars_nBC$logA))
hist((RicPars_nBC$Smax))
summary((RicPars_nBC$Smax))
hist(exp(RicPars_nBC$logSigma))
summary(outSp$value)
length(outSp)
dim(outSp)
1000*30*4
dim(out)
outRhat
outRhat %>% filter(i==1)
outRhat %>% filter(i==1, summary=="simData_nBC")
outRhat %>% filter(i==1, variable=="simData_nBC")
outRhat %>% filter(i==1, variable=="SimData_nBC")
outRhat <- outSp %>% mutate(Rhat = Rhat)
outRhat %>% filter(i==1, variable=="SimData_nBC")
plot(outRhat$value, outRhat$Rhat)
i1nBC <- outRhat %>% filter(i==1, variable=="SimData_nBC")
plot(i1nBC$value, i1nBC$Rhat)
i1nBC-r <- out %>% filter(i==1, variable=="SimData_nBC")
i1nBCR <- out %>% filter(i==1, variable=="SimData_nBC")
i1nBCR
points(i1nBC$value, i1NBCR$value)
points(i1nBC$value, i1nBCR$value)
plot(i1nBC$value, i1nBC$Rhat, ylim=c(0,300000))
points(i1nBC$value, i1nBCR$value)
resid %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,300000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid
summary(resid$value)
summary(resid$value)
resid %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,200000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid%>%filter(variable==SimData_wrongBC)
resid%>%filter(variable=="SimData_wrongBC")
resid %>% filter(variable=="SimData_wrongBC") %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,200000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
summary(resid%>%filter(variable=="SimData_wrongBC")%>%filter(summary=="mean"))
summary(resid%>%filter(variable=="SimData_wrongBC")%>%filter(summary=="median"))
summary(resid%>%filter(variable=="SimData_nBC")%>%filter(summary=="mean"))
summary(resid%>%filter(variable=="SimData_nBC")%>%filter(summary=="median"))
summary(resid%>%filter(variable=="SimData_wBC")%>%filter(summary=="median"))
summary(resid%>%filter(variable=="SimData_wBC")%>%filter(summary=="mean"))
resid %>% filter(variable=="SimData_nBC") %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,200000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid %>% filter(summary=="median") #%>% filter(variable=="SimData_nBC") %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,200000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid %>% filter(summary=="median") %>% #filter(variable=="SimData_nBC") %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,200000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid %>% filter(summary=="median") %>% #filter(variable=="SimData_nBC") %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,100000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid %>% filter(summary=="median") %>% #filter(variable=="SimData_nBC") %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,75000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid <- resid %>% filter(summary %in% c("mean", "median")) %>% mutate( residuals_medPars = round(as.numeric(value),0) )
resid %>% filter(summary=="median") %>% #filter(variable=="SimData_nBC") %>%
ggplot(aes(variable, resids_medPars)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,75000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
resid <- resid %>% filter(summary %in% c("mean", "median")) %>% mutate( residuals_medPars = round(as.numeric(value),0) )
resid <- data.frame(cbind(out, Rhat))  %>% mutate(resid=(value - Rhat)) %>% select(i, variable, resid)
#resid <- out %>% left_join(outRhat, by=c("i", "variable"))
resid <- group_by(resid, variable, i) %>%
summarise(mean = mean(resid), median = median(resid), .groups = "drop")
resid <- reshape2::melt(resid, id.vars = c("i", "variable"), variable.name = "summary")
resid <- resid %>% filter(summary %in% c("mean", "median")) %>% mutate( residuals_medPars = round(as.numeric(value),0) )
resid
resid %>% filter(summary=="median") %>% #filter(variable=="SimData_nBC") %>%
ggplot(aes(variable, residuals_medPars)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (-2000,75000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 0))
rel_error %>%
ggplot(aes(variable, RelativeError)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,5) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 1))
REplot <- rel_error %>%
ggplot(aes(variable, RelativeError)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,5) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 1))
ggsave(REplot, "DataOut/RelErrorRec.png")
?ggsave
REplot <- rel_error %>%
ggplot(aes(variable, RelativeError)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,5) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(mapping = aes(yintercept = 1))
ggsave("DataOut/RelErrorRec.png", REplot)
result %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,300000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(data = lines, mapping = aes(yintercept = value))
group_by(result, summary, variable) %>%
summarise(
rel_error_mean = mean(as.numeric(value) / mean(outR$value)),
rel_error_median = mean(as.numeric(value) / median(outR$value))) %>%
knitr::kable(digits = 2)
result %>%
ggplot(aes(variable, value)) +
#geom_point() +
geom_jitter(alpha = 0.5, width=0.2) +
ylim (0,300000) +
facet_wrap(vars(summary), ncol = 1) +
geom_hline(data = lines, mapping = aes(yintercept = value))
group_by(rel_error, summary, variable) %>%
summarise(
RelativeError = median(RelativeError)) %>%
knitr::kable(digits = 2)
RicPars_nBC
RicPars_nBC$logA
hist<-exp(RicPars_nBC$logA)
hist(exp(RicPars_nBC$logA))
hist(exp(RicPars_wBC$logA))
hist(exp(RicPars_nBC$logA+exp(RicPars_nBC$logSigma)^2/2))
hist((RicPars_wBC$Smax))
hist((RicPars_wBC$Smax), ylim=c(0.300000))
hist((RicPars_wBC$Smax), xlim=c(0.300000))
hist((RicPars_wBC$Smax), xlim=c(0,300000))
hist((RicPars_wBC$Smax), xlim=c(0,300000), breaks=10)
hist((RicPars_wBC$Smax), xlim=c(0,300000), breaks=100)
hist((RicPars_wBC$Smax), xlim=c(0,300000), breaks=200)
hist((RicPars_nBC$Smax), xlim=c(0,300000), breaks=200)
hist((RicPars_wrongBC$Smax), xlim=c(0,300000), breaks=200)
RicPars_nBC$logA
RicPars_nBC$Smax
RicPars_nBC$Smax[1:100]
RicPars_wBC$Smax[1:100]
exp(RicPars_wBC$logA)[1:100]
exp(RicPars_nBC$logA+exp(RicPars_nBC$logSigma)^2/2)[1:100]
