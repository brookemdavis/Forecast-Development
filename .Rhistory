# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
ntrials <- 100
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = rtruncnorm(1,a=0, b=Inf, 5, 2), true_b=1/100000,
hr_min = 0.2, hr_max = 0.8, lnorm_corr = F)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
ntrials <- 100
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = rtruncnorm(1,a=0, b=Inf, 5, 2), true_b=1/100000,
hr_min = 0.2, hr_max = 0.8, lnorm_corr = F)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
set.seed(10)#(1004)
ntrials <- 10000
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = rtruncnorm(1,a=0, b=Inf, 5, 2), true_b=1/100000,
hr_min = 0.2, hr_max = 0.8, lnorm_corr = F)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
ntrials <- 1000
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = rtruncnorm(1,a=0, b=Inf, 5, 2), true_b=1/100000,
hr_min = 0.2, hr_max = 0.8, lnorm_corr = F)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
set.seed(10)#(1004)
ntrials <- 1000
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = 5, true_b=1/100000, #true_a = rnorm(1,5, 2)
hr_min = 0.2, hr_max = 0.8, lnorm_corr = F)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
set.seed(10)#(1004)
ntrials <- 1000
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = 5, true_b=1/100000, #true_a = rnorm(1,5, 2)
hr_min = 0.2, hr_max = 0.8, lnorm_corr = T)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
set.seed(100)#(1004)
ntrials <- 1000
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = 5, true_b=1/100000, #true_a = rnorm(1,5, 2)
hr_min = 0.2, hr_max = 0.8, lnorm_corr = T)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
set.seed(100)#(1004)
ntrials <- 1000
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = 5, true_b=1/100000, #true_a = rnorm(1,5, 2)
hr_min = 0.2, hr_max = 0.8, lnorm_corr = F)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=F, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
ntrials <- 1000
RicPars <- matrix(NA, ntrials, 4)
for (i in 1:ntrials) {
SimData <- Sim_Ricker_SR_Data(leng=50, age=4, Sig_Ricker = 0.8, true_a = 5, true_b=1/100000, #true_a = rnorm(1,5, 2)
hr_min = 0.2, hr_max = 0.8, lnorm_corr = T)
SimDataDF <- data.frame(S = round(SimData$S), R = (SimData$R), Year = 1:length(SimData$S))
#ggplot(SimDataDF, aes(x=S, y=R)) + geom_point() + coord_fixed()
# Create DF to store true and fitted values
DataDF <- SimDataDF[, c("S", "R", "Year")]
DataDF$Fit <- SimData$true_a * DataDF$S * exp( -SimData$true_b * DataDF$S ) #* exp(Sig_Ricker^2/2)
DataDF$Mod <- "True"
DataDF$CI_low <- DataDF$CI_up  <-  DataDF$Pred <- DataDF$Pred_low <- DataDF$Pred_up <- DataDF$Fit
# run using TMB, without prior
# Switch BiasCorr between T and F and plot to see impact of bias correction in LL
TMB_No_Prior <- RunRicker(Data = SimDataDF,
Fitting_SW = "TMB",
Priors = F, BiasCorr=T, Name = "TMB_No_Prior")
#RicPars[i,] <-  TMB_No_Prior$Ests$Estimate[1:3] #logA, logSigma, logSMAX
logA <- TMB_No_Prior$Ests %>% filter(Param=="logA") %>% pull(Estimate)
logSmax <- TMB_No_Prior$Ests %>% filter(Param=="logSmax") %>% pull(Estimate)
logSigma <- TMB_No_Prior$Ests %>% filter(Param=="logSigma") %>% pull(Estimate)
RicPars[i,] <- c(logA, logSmax, logSigma, TMB_No_Prior$Scale)
}
colnames(RicPars) <- c("logA", "logSmax", "logSigma", "Scale")
RicPars <- as.data.frame(RicPars)
# Remove all MC trials with productivity less than 1 (logA < 0)
RicPars <- RicPars %>% filter(logA >= 0)
# Remove all MC trials with Smax > 100x the true Smax (1 million). I don't think this constratint is needed
RicPars <- RicPars %>% mutate(Smax = exp(logSmax)*Scale) #%>% filter(Smax <= 1000000)
ntrialsTuned <- length (RicPars$logA)
S <- NA
Rpred <- matrix(NA, 1500, ntrialsTuned)
for (i in 1:ntrialsTuned) {
for (j in 1:1500){ #Assuming true smax ~ 100,000, and plot extends to 1.5 x Smax
S[j] <- j*100
Rpred[j,i] <-  exp( RicPars$logA[i] ) * S[j] * exp( -S[j] / RicPars$Smax[i] )
}
}
Rpred_dist <- apply(Rpred, 1, quantile, probs = c(0.025, 0.5, 0.975))
EstAgg <- data.frame(S=S, Fit=Rpred_dist[2,], CI_low=Rpred_dist[1,], CI_up = Rpred_dist[3,])
EstAgg$Mod <- "TMB_No_Prior"
if(ntrials ==1){
All_Ests <- bind_rows(DataDF, TMB_No_Prior[[1]])
}
if(ntrials > 1){
All_Ests <- bind_rows(DataDF, EstAgg)
}
# Now plot all to compare
ggplot(data = All_Ests, aes(x=S, y=Fit, ymin = CI_low, ymax = CI_up, col = Mod, fill= Mod)) +
geom_line(size = 1.5) +
geom_ribbon( alpha = 0.1) +
geom_point(aes(x=S, y=R), col = "black") +
#geom_ribbon(aes(x=S, y=Pred, ymin = Pred_low, ymax = Pred_up, fill= Mod),
#            alpha = 0.05) +
scale_color_discrete(name = "", labels = c("Estimated curve w/o\nbias correction in LL", "True")) +
guides(fill = FALSE)  +
xlab("Spawners") +
ylab("Recruitment") +
theme_bw(base_size=16)
