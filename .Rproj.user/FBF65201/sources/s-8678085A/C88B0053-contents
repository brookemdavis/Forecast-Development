#headers
#This code has been originally created by Mike Hawkshaw in 2018 for 2019FC
#For 2020FC Yi Xu adjusted it and make automatically run with data input in separate file
#questions: yi.xu2@dfo-mpo.gc.ca
#Sometimes this code is not running correctly or frozen, under that situation, RStudio needs to restart to solve it.
#install.packages(c("calibrate","changepoint")) These packages are needed to run this code. 

rm(list=ls())
required.packages<-c("calibrate","changepoint","ggplot2","rstan")
missing.packages <-  required.packages[!(required.packages %in% rownames(installed.packages()))]
for(pkg in missing.packages){install.packages(pkg)}
library(calibrate)
library(changepoint)
library(ggplot2)
library(rstan)


#read SR data
SR_data<-read.csv("../DATA/SRDATA2020.csv")
sibling_data<-read.csv("../SPEC_FILES/select_models_manpower_allsib.csv",stringsAsFactors = F)

#extract 2019 returned age4 fish for the following populations
popn_sibling<-sibling_data$PopID[sibling_data$Sibling=="YES"]#c(2,4,5,6,7,8,9,10,13,14,15,18)
names<-sibling_data$Stock[sibling_data$Sibling=="YES"]#c("E.Stuart", "Bowron","Raft","Quesnel","Chilko","Seymour", "L.Shuswap","Birkenhead","Weaver","Fennel","Scotch","Pitt")
age4_2019_df<-dplyr::filter(SR_data,yr==2015&PopID%in%popn_sibling)
age3_2019_df<-dplyr::filter(SR_data,yr==2016&PopID==19)
age4_2019<-age4_2019_df$rec4
age4_2019[19]<-age3_2019_df$rec3

latham4<-age4_2019[popn_sibling]
byeff<-age4_2019_df$eff
byeff[19]<-age3_2019_df$eff

probs<-c(0.1,0.25,0.5,0.75,0.9)
pred_age5_allpops<-data.frame(popID=popn_sibling,
                              p10=rep(NA,length(popn_sibling)),p25=NA,p50=NA,p75=NA,p90=NA,
                              age4_2019=latham4,BY_eff=byeff[popn_sibling],R2=NA)


rownames(pred_age5_allpops)<-names
generate_data_file<-function(dataset, popn_id){
  temp_dataset<-subset(dataset, PopID==popn_id)
  years<-temp_dataset$yr
  age4<-temp_dataset$rec4  
  age5<-temp_dataset$rec5
  if(popn_id==19) age4<-temp_dataset$rec3
  if(popn_id==19) age5<-temp_dataset$rec4
  index<-(age4+age5)/(age4+age5)
  index[is.na(index)]<-0
  
  DF_sibling<-data.frame(year=years[1:sum(index)],age4=age4[1:sum(index)],age5=age5[1:sum(index)],index=index[1:sum(index)])
  
return(DF_sibling)
}

#par(mfcol=c(1,2))

for(i in 1:length(popn_sibling)){
  
  aaa<-generate_data_file(SR_data,popn_sibling[i])

  aaa<-aaa[(1-rowMeans(aaa==0))==1,]
  aaa<-subset(aaa, year>=1980&year<=2015)
  
  
  dat_sib<-list(n_years=length(aaa$year), rec4=aaa$age4, rec5=aaa$age5, index=aaa$index, obs_age4=latham4[i])
  set.seed(1234)
  fit<-stan(file = '../SPEC_FILES/sibling.stan', data = dat_sib, iter=4000)
  
  pred_5<-extract(fit, pars="pred_age5")
  alpha_5<-median(extract(fit, pars="alpha")$alpha)
  beta_5<-median(extract(fit, pars="beta")$beta)
  
  nam <- paste("pop", popn_sibling[i], sep = "")
  assign(nam, pred_5)
  
 
  ln_pred_age5=alpha_5-beta_5*log(aaa$age4)
  
  aproxR2<-cor(ln_pred_age5,log(aaa$age5))^2

  pred_age5_allpops[i,2:6]<-quantile(pred_5$pred_age5, probs=probs)
  pred_age5_allpops[i,9]<-aproxR2
  
}

pred_age5_allpops$age5_prod<-pred_age5_allpops$p50/byeff[popn_sibling]

write.csv(pred_age5_allpops,file = "sibling_age5_results_allsib.csv")
